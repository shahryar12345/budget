// <auto-generated />
using System;
using ABSDAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ABSDAL.Migrations
{
    [DbContext(typeof(BudgetingContext))]
    partial class BudgetingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ABS.DBModels.APIEndpoint", b =>
                {
                    b.Property<int>("APIEndpointID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("APICode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnvironmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Function")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Interval")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestHeaders")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("cronstring")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("APIEndpointID");

                    b.ToTable("APIEndpoints");
                });

            modelBuilder.Entity("ABS.DBModels.Accounts", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AccountID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ABS.DBModels.Addresses", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AddressTypeItemTypeID")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressID");

                    b.HasIndex("AddressTypeItemTypeID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ABS.DBModels.ApplicationLogging", b =>
                {
                    b.Property<int>("MLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaintenanceLogDetails")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("MLogID");

                    b.ToTable("ApplicationLogging");
                });

            modelBuilder.Entity("ABS.DBModels.BudgetVersionGLAccounts", b =>
                {
                    b.Property<int>("StatisticID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("April")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("August")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BudgetVersionID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DataScenarioDataIDDataScenarioID")
                        .HasColumnType("int");

                    b.Property<int?>("DataScenarioTypeIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("December")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("DimensionsRowIDDimensionsID")
                        .HasColumnType("int");

                    b.Property<int?>("EntityID")
                        .HasColumnType("int");

                    b.Property<decimal?>("February")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("GLAccountID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("January")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("July")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("June")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("March")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("May")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("November")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("October")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal?>("September")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TimePeriodID1")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("rowTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("StatisticID");

                    b.HasIndex("BudgetVersionID");

                    b.HasIndex("DataScenarioDataIDDataScenarioID");

                    b.HasIndex("DataScenarioTypeIDItemTypeID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("DimensionsRowIDDimensionsID");

                    b.HasIndex("EntityID");

                    b.HasIndex("GLAccountID");

                    b.HasIndex("TimePeriodID1");

                    b.ToTable("BudgetVersionGLAccounts");
                });

            modelBuilder.Entity("ABS.DBModels.BudgetVersionStaffing", b =>
                {
                    b.Property<int>("BudgetVersionStaffingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("April")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("August")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BudgetVersionID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DataScenarioID1")
                        .HasColumnType("int");

                    b.Property<int?>("DataScenarioTypeIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("December")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("DimensionsRowIDDimensionsID")
                        .HasColumnType("int");

                    b.Property<int?>("EntityID")
                        .HasColumnType("int");

                    b.Property<decimal?>("February")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("January")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("JobCodeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("July")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("June")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("March")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("May")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("November")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("October")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PayTypeID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal?>("September")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StaffingDataTypeItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("TimePeriodID1")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("rowTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("wageRateOverride")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BudgetVersionStaffingID");

                    b.HasIndex("BudgetVersionID");

                    b.HasIndex("DataScenarioID1");

                    b.HasIndex("DataScenarioTypeIDItemTypeID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("DimensionsRowIDDimensionsID");

                    b.HasIndex("EntityID");

                    b.HasIndex("JobCodeID");

                    b.HasIndex("PayTypeID");

                    b.HasIndex("StaffingDataTypeItemTypeID");

                    b.HasIndex("TimePeriodID1");

                    b.ToTable("BudgetVersionStaffing");
                });

            modelBuilder.Entity("ABS.DBModels.BudgetVersionStatistics", b =>
                {
                    b.Property<int>("StatisticID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("April")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("August")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BudgetVersionID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DataScenarioDataIDDataScenarioID")
                        .HasColumnType("int");

                    b.Property<int?>("DataScenarioTypeIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("December")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("DimensionsRowIDDimensionsID")
                        .HasColumnType("int");

                    b.Property<int?>("EntityID")
                        .HasColumnType("int");

                    b.Property<decimal?>("February")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("January")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("July")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("June")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("March")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("May")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("November")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("October")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal?>("September")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StatisticsCodesStatisticsCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("TimePeriodID1")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("rowTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("StatisticID");

                    b.HasIndex("BudgetVersionID");

                    b.HasIndex("DataScenarioDataIDDataScenarioID");

                    b.HasIndex("DataScenarioTypeIDItemTypeID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("DimensionsRowIDDimensionsID");

                    b.HasIndex("EntityID");

                    b.HasIndex("StatisticsCodesStatisticsCodeID");

                    b.HasIndex("TimePeriodID1");

                    b.ToTable("BudgetVersionStatistics");
                });

            modelBuilder.Entity("ABS.DBModels.BudgetVersions", b =>
                {
                    b.Property<int>("BudgetVersionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ADSbudgetVersionIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("ADSgeneralLedgerIDDataScenarioID")
                        .HasColumnType("int");

                    b.Property<int?>("ADSscenarioTypeIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("ADSstaffingIDDataScenarioID")
                        .HasColumnType("int");

                    b.Property<int?>("ADSstatisticsIDDataScenarioID")
                        .HasColumnType("int");

                    b.Property<string>("CalculationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("TimePeriodID1")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserProfileID")
                        .HasColumnType("int");

                    b.Property<int?>("budgetVersionTypeIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("fiscalStartMonthIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("fiscalYearIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("scenarioTypeIDItemTypeID")
                        .HasColumnType("int");

                    b.HasKey("BudgetVersionID");

                    b.HasIndex("ADSbudgetVersionIDItemTypeID");

                    b.HasIndex("ADSgeneralLedgerIDDataScenarioID");

                    b.HasIndex("ADSscenarioTypeIDItemTypeID");

                    b.HasIndex("ADSstaffingIDDataScenarioID");

                    b.HasIndex("ADSstatisticsIDDataScenarioID");

                    b.HasIndex("TimePeriodID1");

                    b.HasIndex("budgetVersionTypeIDItemTypeID");

                    b.HasIndex("fiscalStartMonthIDItemTypeID");

                    b.HasIndex("fiscalYearIDItemTypeID");

                    b.HasIndex("scenarioTypeIDItemTypeID");

                    b.ToTable("BudgetVersions");
                });

            modelBuilder.Entity("ABS.DBModels.ChargeCodes", b =>
                {
                    b.Property<int>("ChargeCodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChargeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeCodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMaster")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ChargeCodeID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("ChargeCodes");
                });

            modelBuilder.Entity("ABS.DBModels.DataScenario", b =>
                {
                    b.Property<int>("DataScenarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChildID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataScenarioCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataScenarioName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DataSourcceIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("ScenarioTypeItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("TimePeriodID")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DataScenarioID");

                    b.HasIndex("DataSourcceIDItemTypeID");

                    b.HasIndex("ScenarioTypeItemTypeID");

                    b.HasIndex("TimePeriodID");

                    b.ToTable("DataScenario");
                });

            modelBuilder.Entity("ABS.DBModels.Departments", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChildID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DataSourcceIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentMasterIDDepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentTypeIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupPolicyItemTypeID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGroup")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHierarchy")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMaster")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DepartmentID");

                    b.HasIndex("DataSourcceIDItemTypeID");

                    b.HasIndex("DepartmentMasterIDDepartmentID");

                    b.HasIndex("DepartmentTypeIDItemTypeID");

                    b.HasIndex("GroupPolicyItemTypeID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ABS.DBModels.Dimensions", b =>
                {
                    b.Property<int>("DimensionsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BudgetVersionID")
                        .HasColumnType("int");

                    b.Property<string>("ChildID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DataSourcceIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("EntityID")
                        .HasColumnType("int");

                    b.Property<int?>("ForecastTypeItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("GLAccountID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("JobCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<int?>("PayTypeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Ratio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<bool>("Seasonality")
                        .HasColumnType("bit");

                    b.Property<int?>("SourceEndDateItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("SourceStartDateItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("StatisticsCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("TargetEndDateItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("TargetStartDateItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DimensionsID");

                    b.HasIndex("BudgetVersionID");

                    b.HasIndex("DataSourcceIDItemTypeID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("EntityID");

                    b.HasIndex("ForecastTypeItemTypeID");

                    b.HasIndex("GLAccountID");

                    b.HasIndex("JobCodeID");

                    b.HasIndex("PayTypeID");

                    b.HasIndex("SourceEndDateItemTypeID");

                    b.HasIndex("SourceStartDateItemTypeID");

                    b.HasIndex("StatisticsCodeID");

                    b.HasIndex("TargetEndDateItemTypeID");

                    b.HasIndex("TargetStartDateItemTypeID");

                    b.ToTable("Dimensions");
                });

            modelBuilder.Entity("ABS.DBModels.Entities", b =>
                {
                    b.Property<int>("EntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountID")
                        .HasColumnType("int");

                    b.Property<int?>("AddressID")
                        .HasColumnType("int");

                    b.Property<bool?>("BuyerOfService")
                        .HasColumnType("bit");

                    b.Property<bool?>("CareDeliverFacility")
                        .HasColumnType("bit");

                    b.Property<int?>("ChargeCodeID")
                        .HasColumnType("int");

                    b.Property<string>("ChildID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Clinical")
                        .HasColumnType("bit");

                    b.Property<bool?>("CostAccounting")
                        .HasColumnType("bit");

                    b.Property<string>("CostModelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentMonth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DataSourceIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EffectiveDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FiscalYearCalendarId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("InsuranceCarrier")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("JobCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<string>("PayPeriodCalendarId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PayTypeID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<bool?>("SellerOfServices")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isGroup")
                        .HasColumnType("bit");

                    b.Property<string>("npiEntity")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityID");

                    b.HasIndex("AccountID");

                    b.HasIndex("AddressID");

                    b.HasIndex("ChargeCodeID");

                    b.HasIndex("DataSourceIDItemTypeID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("JobCodeID");

                    b.HasIndex("PayTypeID");

                    b.ToTable("Entities");
                });

            modelBuilder.Entity("ABS.DBModels.ForecastHistory", b =>
                {
                    b.Property<int>("ForecastHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BudgetVersionID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatascenarioType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DatascenarioTypeIdItemTypeID")
                        .HasColumnType("int");

                    b.Property<string>("ForecastHistoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForecastHistoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ForecastHistoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserIDUserProfileID")
                        .HasColumnType("int");

                    b.Property<string>("formulaMethod")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ForecastHistoryID");

                    b.HasIndex("BudgetVersionID");

                    b.HasIndex("DatascenarioTypeIdItemTypeID");

                    b.HasIndex("UserIDUserProfileID");

                    b.ToTable("ForecastHistory");
                });

            modelBuilder.Entity("ABS.DBModels.ForecastModels", b =>
                {
                    b.Property<int>("ForecastModelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ForecastModelID");

                    b.ToTable("ForecastModels");
                });

            modelBuilder.Entity("ABS.DBModels.ForecastSteps", b =>
                {
                    b.Property<int>("ForecastStepID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ForecastModelID")
                        .HasColumnType("int");

                    b.Property<int>("ForecastStepOrder")
                        .HasColumnType("int");

                    b.Property<int?>("ForecastStepTypeItemTypeID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("MaintainSeasonality")
                        .HasColumnType("bit");

                    b.Property<int?>("NumberOfMonths")
                        .HasColumnType("int");

                    b.Property<decimal?>("PercentageChangeValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("SourceBudgetVersionBudgetVersionID")
                        .HasColumnType("int");

                    b.Property<int?>("SourceDepartmentDepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("SourceEntityEntityID")
                        .HasColumnType("int");

                    b.Property<int?>("SourceScenarioTypeItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("SourceStatisticCodeStatisticsCodeID")
                        .HasColumnType("int");

                    b.Property<string>("SpreadMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TargetBudgetVersionBudgetVersionID")
                        .HasColumnType("int");

                    b.Property<int?>("TargetDepartmentDepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("TargetEntityEntityID")
                        .HasColumnType("int");

                    b.Property<int?>("TargetScenarioTypeItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("TargetStatisticCodeStatisticsCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("UseDepartmentGroupTotal")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseEntityGroupTotal")
                        .HasColumnType("bit");

                    b.Property<bool?>("UseStatisticGroupTotal")
                        .HasColumnType("bit");

                    b.HasKey("ForecastStepID");

                    b.HasIndex("ForecastModelID");

                    b.HasIndex("ForecastStepTypeItemTypeID");

                    b.HasIndex("SourceBudgetVersionBudgetVersionID");

                    b.HasIndex("SourceDepartmentDepartmentID");

                    b.HasIndex("SourceEntityEntityID");

                    b.HasIndex("SourceScenarioTypeItemTypeID");

                    b.HasIndex("SourceStatisticCodeStatisticsCodeID");

                    b.HasIndex("TargetBudgetVersionBudgetVersionID");

                    b.HasIndex("TargetDepartmentDepartmentID");

                    b.HasIndex("TargetEntityEntityID");

                    b.HasIndex("TargetScenarioTypeItemTypeID");

                    b.HasIndex("TargetStatisticCodeStatisticsCodeID");

                    b.ToTable("ForecastSteps");
                });

            modelBuilder.Entity("ABS.DBModels.FullTimeEquivalent", b =>
                {
                    b.Property<int>("FullTimeEquivalentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("April")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("August")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("December")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("EntityID")
                        .HasColumnType("int");

                    b.Property<decimal?>("February")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("January")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("JobCodeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("July")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("June")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("March")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("May")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("November")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("October")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal?>("September")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TimePeriodID")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FullTimeEquivalentID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("EntityID");

                    b.HasIndex("JobCodeID");

                    b.HasIndex("TimePeriodID");

                    b.ToTable("FullTimeEquivalent");
                });

            modelBuilder.Entity("ABS.DBModels.GLAccounts", b =>
                {
                    b.Property<int>("GLAccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChildID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DataSourcceIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GLAccountTypeItemTypeID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGroup")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHierarchy")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMaster")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<bool?>("Summable")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("GLAccountID");

                    b.HasIndex("DataSourcceIDItemTypeID");

                    b.HasIndex("GLAccountTypeItemTypeID");

                    b.ToTable("GLAccounts");
                });

            modelBuilder.Entity("ABS.DBModels.GLAccountsInflation", b =>
                {
                    b.Property<int>("GLAccountsInflationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BudgetVersionID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("EndMonthItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("EntityID")
                        .HasColumnType("int");

                    b.Property<int?>("GLAccountID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("InflationPercent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("StartMonthItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("TimePeriodID1")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("GLAccountsInflationID");

                    b.HasIndex("BudgetVersionID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("EndMonthItemTypeID");

                    b.HasIndex("EntityID");

                    b.HasIndex("GLAccountID");

                    b.HasIndex("StartMonthItemTypeID");

                    b.HasIndex("TimePeriodID1");

                    b.ToTable("GLAccountsInflation");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleDataDepartments", b =>
                {
                    b.Property<int>("IdentityAppRoleDataDepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppRoleIDIdentityAppRoleID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID1")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserIDUserProfileID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityAppRoleDataDepartmentID");

                    b.HasIndex("AppRoleIDIdentityAppRoleID");

                    b.HasIndex("DepartmentID1");

                    b.HasIndex("UserIDUserProfileID");

                    b.ToTable("IdentityAppRoleDataDepartments");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleDataEntities", b =>
                {
                    b.Property<int>("IdentityAppRoleDataEntityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppRoleIDIdentityAppRoleID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntityID1")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserIDUserProfileID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityAppRoleDataEntityID");

                    b.HasIndex("AppRoleIDIdentityAppRoleID");

                    b.HasIndex("EntityID1");

                    b.HasIndex("UserIDUserProfileID");

                    b.ToTable("IdentityAppRoleDataEntities");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleDataGLAccounts", b =>
                {
                    b.Property<int>("IdentityAppRoleDataGLAccountsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppRoleIDIdentityAppRoleID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GLAccountsIDGLAccountID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserIDUserProfileID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityAppRoleDataGLAccountsID");

                    b.HasIndex("AppRoleIDIdentityAppRoleID");

                    b.HasIndex("GLAccountsIDGLAccountID");

                    b.HasIndex("UserIDUserProfileID");

                    b.ToTable("IdentityAppRoleDataGLAccounts");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleDataJobCodes", b =>
                {
                    b.Property<int>("IdentityAppRoleDataJobCodesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppRoleIDIdentityAppRoleID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("JobCodesIDJobCodeID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserIDUserProfileID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityAppRoleDataJobCodesID");

                    b.HasIndex("AppRoleIDIdentityAppRoleID");

                    b.HasIndex("JobCodesIDJobCodeID");

                    b.HasIndex("UserIDUserProfileID");

                    b.ToTable("IdentityAppRoleDataJobCodes");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleDataPayTypes", b =>
                {
                    b.Property<int>("IdentityAppRoleDataPayTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppRoleIDIdentityAppRoleID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PayTypesIDPayTypeID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserIDUserProfileID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityAppRoleDataPayTypeID");

                    b.HasIndex("AppRoleIDIdentityAppRoleID");

                    b.HasIndex("PayTypesIDPayTypeID");

                    b.HasIndex("UserIDUserProfileID");

                    b.ToTable("IdentityAppRoleDataPayTypes");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleDataStatistics", b =>
                {
                    b.Property<int>("IdentityAppRoleDataStatisticsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppRoleIDIdentityAppRoleID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("StatsCodeIDStatisticsCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserIDUserProfileID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityAppRoleDataStatisticsID");

                    b.HasIndex("AppRoleIDIdentityAppRoleID");

                    b.HasIndex("StatsCodeIDStatisticsCodeID");

                    b.HasIndex("UserIDUserProfileID");

                    b.ToTable("IdentityAppRoleDataStatistics");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleGroup", b =>
                {
                    b.Property<int>("IdentityRoleGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppRoleIDIdentityAppRoleID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupsIDIdentityGroupID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserIDUserProfileID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityRoleGroupID");

                    b.HasIndex("AppRoleIDIdentityAppRoleID");

                    b.HasIndex("GroupsIDIdentityGroupID");

                    b.HasIndex("UserIDUserProfileID");

                    b.ToTable("IdentityAppRoleGroup");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleScreenOperations", b =>
                {
                    b.Property<int>("IdentityAppRoleScreenOperationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppRoleIDIdentityAppRoleID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("ScreenOperationIDIdentityScreenOperationID")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserIDUserProfileID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityAppRoleScreenOperationID");

                    b.HasIndex("AppRoleIDIdentityAppRoleID");

                    b.HasIndex("ScreenOperationIDIdentityScreenOperationID");

                    b.HasIndex("UserIDUserProfileID");

                    b.ToTable("IdentityAppRoleScreenOperations");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleScreens", b =>
                {
                    b.Property<int>("IdentityAppRoleScreenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppRoleIDIdentityAppRoleID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("ScreenIDIdentityScreenID")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserIDUserProfileID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityAppRoleScreenID");

                    b.HasIndex("AppRoleIDIdentityAppRoleID");

                    b.HasIndex("ScreenIDIdentityScreenID");

                    b.HasIndex("UserIDUserProfileID");

                    b.ToTable("IdentityAppRoleScreens");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleUsers", b =>
                {
                    b.Property<int>("IdentityAppRoleUserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppRoleIDIdentityAppRoleID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserIDUserProfileID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityAppRoleUserID");

                    b.HasIndex("AppRoleIDIdentityAppRoleID");

                    b.HasIndex("UserIDUserProfileID");

                    b.ToTable("IdentityAppRoleUsers");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoles", b =>
                {
                    b.Property<int>("IdentityAppRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityAppRoleID");

                    b.ToTable("IdentityAppRoles");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityGroups", b =>
                {
                    b.Property<int>("IdentityGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isLDAPGroup")
                        .HasColumnType("bit");

                    b.HasKey("IdentityGroupID");

                    b.ToTable("IdentityGroups");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityOperations", b =>
                {
                    b.Property<int>("IdentityOperationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUPdate")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsView")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityOperationID");

                    b.ToTable("IdentityOperations");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityScreenOperations", b =>
                {
                    b.Property<int>("IdentityScreenOperationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Can_Create")
                        .HasColumnType("bit");

                    b.Property<bool?>("Can_Delete")
                        .HasColumnType("bit");

                    b.Property<bool?>("Can_ReadOnly")
                        .HasColumnType("bit");

                    b.Property<bool?>("Can_Update")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("IdentityOperationID")
                        .HasColumnType("int");

                    b.Property<int?>("IdentityScreensIdentityScreenID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityScreenOperationID");

                    b.HasIndex("IdentityOperationID");

                    b.HasIndex("IdentityScreensIdentityScreenID");

                    b.ToTable("IdentityScreenOperations");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityScreens", b =>
                {
                    b.Property<int>("IdentityScreenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChildID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUPdate")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsView")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityScreenID");

                    b.ToTable("IdentityScreens");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityUserProfile", b =>
                {
                    b.Property<int>("UserProfileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobFunction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserDepartments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEntities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserGLAccounts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserJobCodes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPayTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserStatisticCodes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isLDAPUser")
                        .HasColumnType("bit");

                    b.HasKey("UserProfileID");

                    b.ToTable("IdentityUserProfile");
                });

            modelBuilder.Entity("ABS.DBModels.Integrationlogs", b =>
                {
                    b.Property<int>("MLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataPushedtoTarget")
                        .HasColumnType("text");

                    b.Property<string>("DataREceivedfromSource")
                        .HasColumnType("text");

                    b.Property<string>("ResponsefromSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsefromTarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("MLogID");

                    b.ToTable("Integrationlogs");
                });

            modelBuilder.Entity("ABS.DBModels.ItemTypes", b =>
                {
                    b.Property<int>("ItemTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDataType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemTypeDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemTypeKeyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemTypeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ItemTypeID");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("ABS.DBModels.JobCodes", b =>
                {
                    b.Property<int>("JobCodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HighCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGroup")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMaster")
                        .HasColumnType("bit");

                    b.Property<string>("JobCodeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JobCodeMasterJobCodeID")
                        .HasColumnType("int");

                    b.Property<string>("JobCodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobCodeObjectReferenceID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lowcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("JobCodeID");

                    b.HasIndex("JobCodeMasterJobCodeID");

                    b.ToTable("JobCodes");
                });

            modelBuilder.Entity("ABS.DBModels.Models.BackgroundJobs", b =>
                {
                    b.Property<int>("BGJId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Arguments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpireAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HangfireIdentifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvocationData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("userIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BGJId");

                    b.ToTable("BackgroundJobs");
                });

            modelBuilder.Entity("ABS.DBModels.Notification", b =>
                {
                    b.Property<int>("NotificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmailTemplateID")
                        .HasColumnType("int");

                    b.Property<string>("EventCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdentityUserProfile_Recipient_FKUserProfileID")
                        .HasColumnType("int");

                    b.Property<int?>("IdentityUserProfile_SEntBy_FKUserProfileID")
                        .HasColumnType("int");

                    b.Property<int?>("NotificationItemTypeIDs_FKItemTypeID")
                        .HasColumnType("int");

                    b.Property<int>("NotificationTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("RecipientID")
                        .HasColumnType("int");

                    b.Property<int>("SentByID")
                        .HasColumnType("int");

                    b.Property<int?>("Statuses_FKItemTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketInformationID")
                        .HasColumnType("int");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("ToAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isExternal")
                        .HasColumnType("bit");

                    b.HasKey("NotificationID");

                    b.HasIndex("IdentityUserProfile_Recipient_FKUserProfileID");

                    b.HasIndex("IdentityUserProfile_SEntBy_FKUserProfileID");

                    b.HasIndex("NotificationItemTypeIDs_FKItemTypeID");

                    b.HasIndex("Statuses_FKItemTypeID");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("ABS.DBModels.NotificationTemplates", b =>
                {
                    b.Property<int>("TemplateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("TimeStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemplateID");

                    b.ToTable("NotificationTemplates");
                });

            modelBuilder.Entity("ABS.DBModels.PayTypeDistribution", b =>
                {
                    b.Property<int>("PayTypeDistributionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntityID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGroup")
                        .HasColumnType("bit");

                    b.Property<int?>("JobCodeID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PayTypeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("Productive")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PayTypeDistributionID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("EntityID");

                    b.HasIndex("JobCodeID");

                    b.HasIndex("PayTypeID");

                    b.ToTable("PayTypeDistribution");
                });

            modelBuilder.Entity("ABS.DBModels.PayTypes", b =>
                {
                    b.Property<int>("PayTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AccumulateHours")
                        .HasColumnType("bit");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HighCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGroup")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMaster")
                        .HasColumnType("bit");

                    b.Property<string>("Lowcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PayTypeMasterPayTypeID")
                        .HasColumnType("int");

                    b.Property<string>("PayTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PayTypeTypeItemTypeID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PayTypeID");

                    b.HasIndex("PayTypeMasterPayTypeID");

                    b.HasIndex("PayTypeTypeItemTypeID");

                    b.ToTable("PayTypes");
                });

            modelBuilder.Entity("ABS.DBModels.Relationships", b =>
                {
                    b.Property<int>("RelationshipID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChildID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Depth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModelTypeItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<int?>("RelationshipTypeItemTypeID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ordering")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RelationshipID");

                    b.HasIndex("ModelTypeItemTypeID");

                    b.HasIndex("RelationshipTypeItemTypeID");

                    b.ToTable("Relationships");
                });

            modelBuilder.Entity("ABS.DBModels.ReportingDimensions", b =>
                {
                    b.Property<int>("ReportingDimensionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JsonConfig")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelatedPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportProcessingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportStatusItemTypeID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("ScenarioTypeItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserProfileID")
                        .HasColumnType("int");

                    b.Property<string>("value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReportingDimensionID");

                    b.HasIndex("ReportStatusItemTypeID");

                    b.HasIndex("ScenarioTypeItemTypeID");

                    b.ToTable("ReportingDimensions");
                });

            modelBuilder.Entity("ABS.DBModels.StaffingData", b =>
                {
                    b.Property<int>("StaffingDataID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("April")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("August")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DataScenarioID1DataScenarioID")
                        .HasColumnType("int");

                    b.Property<int?>("DataScenarioTypeIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("December")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("EntityID")
                        .HasColumnType("int");

                    b.Property<decimal?>("February")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FiscalMonthItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearItemTypeID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("January")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("JobCodeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("July")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("June")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("March")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("May")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("November")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("October")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PayTypeID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal?>("September")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StaffingAccountID")
                        .HasColumnType("int");

                    b.Property<int?>("StaffingAccountTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("StaffingMasterID")
                        .HasColumnType("int");

                    b.Property<int?>("StaffingTimePeriodTimePeriodID")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.HasKey("StaffingDataID");

                    b.HasIndex("DataScenarioID1DataScenarioID");

                    b.HasIndex("DataScenarioTypeIDItemTypeID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("EntityID");

                    b.HasIndex("FiscalMonthItemTypeID");

                    b.HasIndex("FiscalYearItemTypeID");

                    b.HasIndex("JobCodeID");

                    b.HasIndex("PayTypeID");

                    b.HasIndex("StaffingTimePeriodTimePeriodID");

                    b.ToTable("StaffingData");
                });

            modelBuilder.Entity("ABS.DBModels.StaffingGLMappings", b =>
                {
                    b.Property<int>("StaffingGLMappingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("EntityID")
                        .HasColumnType("int");

                    b.Property<int?>("GLAccountID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("JobCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("PayTypeID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StaffingGLMappingID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("EntityID");

                    b.HasIndex("GLAccountID");

                    b.HasIndex("JobCodeID");

                    b.HasIndex("PayTypeID");

                    b.ToTable("StaffingGLMappings");
                });

            modelBuilder.Entity("ABS.DBModels.StaffingWageAdjustment", b =>
                {
                    b.Property<int>("StaffingWageAdjustmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BudgetVersionID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("EndMonthItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("EntityID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("JobCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("PayTypeID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("StartMonthItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("TimePeriodID1")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("WageAdjustmentPercent")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("StaffingWageAdjustmentID");

                    b.HasIndex("BudgetVersionID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("EndMonthItemTypeID");

                    b.HasIndex("EntityID");

                    b.HasIndex("JobCodeID");

                    b.HasIndex("PayTypeID");

                    b.HasIndex("StartMonthItemTypeID");

                    b.HasIndex("TimePeriodID1");

                    b.ToTable("StaffingWageAdjustment");
                });

            modelBuilder.Entity("ABS.DBModels.StatisticMappings", b =>
                {
                    b.Property<int>("StatisticMappingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColumnLabels")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("EntityID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("PrimaryStatisticCodeStatisticsCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("PrimaryStatisticMasterStatisticsCodeID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("SecondaryStatisticCodeStatisticsCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("SecondaryStatisticMasterStatisticsCodeID")
                        .HasColumnType("int");

                    b.Property<string>("StatisticMappingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatisticMappingDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatisticMappingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TertiaryStatisticCodeStatisticsCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("TertiaryStatisticMasterStatisticsCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StatisticMappingID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("EntityID");

                    b.HasIndex("PrimaryStatisticCodeStatisticsCodeID");

                    b.HasIndex("PrimaryStatisticMasterStatisticsCodeID");

                    b.HasIndex("SecondaryStatisticCodeStatisticsCodeID");

                    b.HasIndex("SecondaryStatisticMasterStatisticsCodeID");

                    b.HasIndex("TertiaryStatisticCodeStatisticsCodeID");

                    b.HasIndex("TertiaryStatisticMasterStatisticsCodeID");

                    b.ToTable("StatisticMappings");
                });

            modelBuilder.Entity("ABS.DBModels.StatisticalData", b =>
                {
                    b.Property<int>("StatisticalDataID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("April")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("August")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChildID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DataScenarioDataIDDataScenarioID")
                        .HasColumnType("int");

                    b.Property<int?>("DataScenarioTypeIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("DataSourcceIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("December")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("EntityID")
                        .HasColumnType("int");

                    b.Property<decimal?>("February")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FiscalYearIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearMonthIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("GLAccountMasterIDGLAccountID")
                        .HasColumnType("int");

                    b.Property<int?>("GLAccountTypeIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("GlAccoutnIDGLAccountID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("January")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("July")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("June")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("March")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("May")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("November")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("October")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal?>("September")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StaffingAccountID")
                        .HasColumnType("int");

                    b.Property<int?>("StaffingAccoutTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("StaffingMasterID")
                        .HasColumnType("int");

                    b.Property<int?>("StatisticCodeStatisticsCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("StatisticTimePeriodTimePeriodID")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.HasKey("StatisticalDataID");

                    b.HasIndex("DataScenarioDataIDDataScenarioID");

                    b.HasIndex("DataScenarioTypeIDItemTypeID");

                    b.HasIndex("DataSourcceIDItemTypeID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("EntityID");

                    b.HasIndex("FiscalYearIDItemTypeID");

                    b.HasIndex("FiscalYearMonthIDItemTypeID");

                    b.HasIndex("GLAccountMasterIDGLAccountID");

                    b.HasIndex("GLAccountTypeIDItemTypeID");

                    b.HasIndex("GlAccoutnIDGLAccountID");

                    b.HasIndex("StatisticCodeStatisticsCodeID");

                    b.HasIndex("StatisticTimePeriodTimePeriodID");

                    b.ToTable("StatisticalData");
                });

            modelBuilder.Entity("ABS.DBModels.StatisticsCodes", b =>
                {
                    b.Property<int>("StatisticsCodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChildID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColumnLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DataSourcceIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGroup")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMaster")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int?>("StatisticCodeTypeItemTypeID")
                        .HasColumnType("int");

                    b.Property<string>("StatisticsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatisticsCodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Summable")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("StatisticsCodeID");

                    b.HasIndex("DataSourcceIDItemTypeID");

                    b.HasIndex("StatisticCodeTypeItemTypeID");

                    b.ToTable("StatisticsCodes");
                });

            modelBuilder.Entity("ABS.DBModels.SubAccountsDimensions", b =>
                {
                    b.Property<int>("SubAccountsDimensionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("April")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("August")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BudgetVersionID")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DataScenarioID1")
                        .HasColumnType("int");

                    b.Property<int?>("DataScenarioTypeIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("December")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DimensionsRowIDDimensionsID")
                        .HasColumnType("int");

                    b.Property<int?>("EntityID")
                        .HasColumnType("int");

                    b.Property<decimal?>("February")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("GLAccountsGLAccountID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("January")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("JobCodeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("July")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("June")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("March")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("May")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("November")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("October")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PayTypeID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal?>("September")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StaffingDataTypeItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("StatisticsCodesStatisticsCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("TimePeriodID1")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("rowTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("subAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subAccountTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subAccountValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("wageRateOverride")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SubAccountsDimensionID");

                    b.HasIndex("BudgetVersionID");

                    b.HasIndex("DataScenarioID1");

                    b.HasIndex("DataScenarioTypeIDItemTypeID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("DimensionsRowIDDimensionsID");

                    b.HasIndex("EntityID");

                    b.HasIndex("GLAccountsGLAccountID");

                    b.HasIndex("JobCodeID");

                    b.HasIndex("PayTypeID");

                    b.HasIndex("StaffingDataTypeItemTypeID");

                    b.HasIndex("StatisticsCodesStatisticsCodeID");

                    b.HasIndex("TimePeriodID1");

                    b.ToTable("SubAccountsDimensions");
                });

            modelBuilder.Entity("ABS.DBModels.SystemSettings", b =>
                {
                    b.Property<int>("SettingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemDataTypeItemTypeID")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SettingKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SettingValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserProfileID")
                        .HasColumnType("int");

                    b.HasKey("SettingID");

                    b.HasIndex("ItemDataTypeItemTypeID");

                    b.ToTable("SystemSettings");
                });

            modelBuilder.Entity("ABS.DBModels.TimePeriods", b =>
                {
                    b.Property<int>("TimePeriodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("FetchedFromADS")
                        .HasColumnType("bit");

                    b.Property<int?>("FiscalEndMonthIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalStartMonthIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearEndIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearIDItemTypeID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("TimePeriodCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimePeriodDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimePeriodName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TimePeriodID");

                    b.HasIndex("FiscalEndMonthIDItemTypeID");

                    b.HasIndex("FiscalStartMonthIDItemTypeID");

                    b.HasIndex("FiscalYearEndIDItemTypeID");

                    b.HasIndex("FiscalYearIDItemTypeID");

                    b.ToTable("TimePeriods");
                });

            modelBuilder.Entity("ABS.DBModels.UserBackups", b =>
                {
                    b.Property<int>("UserBackupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BackupDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserProfileID")
                        .HasColumnType("int");

                    b.HasKey("UserBackupID");

                    b.ToTable("UserBackups");
                });

            modelBuilder.Entity("ABS.DBModels.Accounts", b =>
                {
                    b.HasOne("ABS.DBModels.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");
                });

            modelBuilder.Entity("ABS.DBModels.Addresses", b =>
                {
                    b.HasOne("ABS.DBModels.ItemTypes", "AddressType")
                        .WithMany()
                        .HasForeignKey("AddressTypeItemTypeID");
                });

            modelBuilder.Entity("ABS.DBModels.BudgetVersionGLAccounts", b =>
                {
                    b.HasOne("ABS.DBModels.BudgetVersions", "BudgetVersion")
                        .WithMany()
                        .HasForeignKey("BudgetVersionID");

                    b.HasOne("ABS.DBModels.DataScenario", "DataScenarioDataID")
                        .WithMany()
                        .HasForeignKey("DataScenarioDataIDDataScenarioID");

                    b.HasOne("ABS.DBModels.ItemTypes", "DataScenarioTypeID")
                        .WithMany()
                        .HasForeignKey("DataScenarioTypeIDItemTypeID");

                    b.HasOne("ABS.DBModels.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("ABS.DBModels.Dimensions", "DimensionsRowID")
                        .WithMany()
                        .HasForeignKey("DimensionsRowIDDimensionsID");

                    b.HasOne("ABS.DBModels.Entities", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityID");

                    b.HasOne("ABS.DBModels.GLAccounts", "GLAccount")
                        .WithMany()
                        .HasForeignKey("GLAccountID");

                    b.HasOne("ABS.DBModels.TimePeriods", "TimePeriodID")
                        .WithMany()
                        .HasForeignKey("TimePeriodID1");
                });

            modelBuilder.Entity("ABS.DBModels.BudgetVersionStaffing", b =>
                {
                    b.HasOne("ABS.DBModels.BudgetVersions", "BudgetVersion")
                        .WithMany()
                        .HasForeignKey("BudgetVersionID");

                    b.HasOne("ABS.DBModels.DataScenario", "DataScenarioID")
                        .WithMany()
                        .HasForeignKey("DataScenarioID1");

                    b.HasOne("ABS.DBModels.ItemTypes", "DataScenarioTypeID")
                        .WithMany()
                        .HasForeignKey("DataScenarioTypeIDItemTypeID");

                    b.HasOne("ABS.DBModels.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("ABS.DBModels.Dimensions", "DimensionsRowID")
                        .WithMany()
                        .HasForeignKey("DimensionsRowIDDimensionsID");

                    b.HasOne("ABS.DBModels.Entities", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityID");

                    b.HasOne("ABS.DBModels.JobCodes", "JobCode")
                        .WithMany()
                        .HasForeignKey("JobCodeID");

                    b.HasOne("ABS.DBModels.PayTypes", "PayType")
                        .WithMany()
                        .HasForeignKey("PayTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "StaffingDataType")
                        .WithMany()
                        .HasForeignKey("StaffingDataTypeItemTypeID");

                    b.HasOne("ABS.DBModels.TimePeriods", "TimePeriodID")
                        .WithMany()
                        .HasForeignKey("TimePeriodID1");
                });

            modelBuilder.Entity("ABS.DBModels.BudgetVersionStatistics", b =>
                {
                    b.HasOne("ABS.DBModels.BudgetVersions", "BudgetVersion")
                        .WithMany()
                        .HasForeignKey("BudgetVersionID");

                    b.HasOne("ABS.DBModels.DataScenario", "DataScenarioDataID")
                        .WithMany()
                        .HasForeignKey("DataScenarioDataIDDataScenarioID");

                    b.HasOne("ABS.DBModels.ItemTypes", "DataScenarioTypeID")
                        .WithMany()
                        .HasForeignKey("DataScenarioTypeIDItemTypeID");

                    b.HasOne("ABS.DBModels.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("ABS.DBModels.Dimensions", "DimensionsRowID")
                        .WithMany()
                        .HasForeignKey("DimensionsRowIDDimensionsID");

                    b.HasOne("ABS.DBModels.Entities", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityID");

                    b.HasOne("ABS.DBModels.StatisticsCodes", "StatisticsCodes")
                        .WithMany()
                        .HasForeignKey("StatisticsCodesStatisticsCodeID");

                    b.HasOne("ABS.DBModels.TimePeriods", "TimePeriodID")
                        .WithMany()
                        .HasForeignKey("TimePeriodID1");
                });

            modelBuilder.Entity("ABS.DBModels.BudgetVersions", b =>
                {
                    b.HasOne("ABS.DBModels.ItemTypes", "ADSbudgetVersionID")
                        .WithMany()
                        .HasForeignKey("ADSbudgetVersionIDItemTypeID");

                    b.HasOne("ABS.DBModels.DataScenario", "ADSgeneralLedgerID")
                        .WithMany()
                        .HasForeignKey("ADSgeneralLedgerIDDataScenarioID");

                    b.HasOne("ABS.DBModels.ItemTypes", "ADSscenarioTypeID")
                        .WithMany()
                        .HasForeignKey("ADSscenarioTypeIDItemTypeID");

                    b.HasOne("ABS.DBModels.DataScenario", "ADSstaffingID")
                        .WithMany()
                        .HasForeignKey("ADSstaffingIDDataScenarioID");

                    b.HasOne("ABS.DBModels.DataScenario", "ADSstatisticsID")
                        .WithMany()
                        .HasForeignKey("ADSstatisticsIDDataScenarioID");

                    b.HasOne("ABS.DBModels.TimePeriods", "TimePeriodID")
                        .WithMany()
                        .HasForeignKey("TimePeriodID1");

                    b.HasOne("ABS.DBModels.ItemTypes", "budgetVersionTypeID")
                        .WithMany()
                        .HasForeignKey("budgetVersionTypeIDItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "fiscalStartMonthID")
                        .WithMany()
                        .HasForeignKey("fiscalStartMonthIDItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "fiscalYearID")
                        .WithMany()
                        .HasForeignKey("fiscalYearIDItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "scenarioTypeID")
                        .WithMany()
                        .HasForeignKey("scenarioTypeIDItemTypeID");
                });

            modelBuilder.Entity("ABS.DBModels.ChargeCodes", b =>
                {
                    b.HasOne("ABS.DBModels.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");
                });

            modelBuilder.Entity("ABS.DBModels.DataScenario", b =>
                {
                    b.HasOne("ABS.DBModels.ItemTypes", "DataSourcceID")
                        .WithMany()
                        .HasForeignKey("DataSourcceIDItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "ScenarioType")
                        .WithMany()
                        .HasForeignKey("ScenarioTypeItemTypeID");

                    b.HasOne("ABS.DBModels.TimePeriods", "TimePeriod")
                        .WithMany()
                        .HasForeignKey("TimePeriodID");
                });

            modelBuilder.Entity("ABS.DBModels.Departments", b =>
                {
                    b.HasOne("ABS.DBModels.ItemTypes", "DataSourcceID")
                        .WithMany()
                        .HasForeignKey("DataSourcceIDItemTypeID");

                    b.HasOne("ABS.DBModels.Departments", "DepartmentMasterID")
                        .WithMany()
                        .HasForeignKey("DepartmentMasterIDDepartmentID");

                    b.HasOne("ABS.DBModels.ItemTypes", "DepartmentTypeID")
                        .WithMany()
                        .HasForeignKey("DepartmentTypeIDItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "GroupPolicy")
                        .WithMany()
                        .HasForeignKey("GroupPolicyItemTypeID");
                });

            modelBuilder.Entity("ABS.DBModels.Dimensions", b =>
                {
                    b.HasOne("ABS.DBModels.BudgetVersions", "BudgetVersion")
                        .WithMany()
                        .HasForeignKey("BudgetVersionID");

                    b.HasOne("ABS.DBModels.ItemTypes", "DataSourcceID")
                        .WithMany()
                        .HasForeignKey("DataSourcceIDItemTypeID");

                    b.HasOne("ABS.DBModels.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("ABS.DBModels.Entities", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityID");

                    b.HasOne("ABS.DBModels.ItemTypes", "ForecastType")
                        .WithMany()
                        .HasForeignKey("ForecastTypeItemTypeID");

                    b.HasOne("ABS.DBModels.GLAccounts", "GLAccount")
                        .WithMany()
                        .HasForeignKey("GLAccountID");

                    b.HasOne("ABS.DBModels.JobCodes", "JobCode")
                        .WithMany()
                        .HasForeignKey("JobCodeID");

                    b.HasOne("ABS.DBModels.PayTypes", "PayType")
                        .WithMany()
                        .HasForeignKey("PayTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "SourceEndDate")
                        .WithMany()
                        .HasForeignKey("SourceEndDateItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "SourceStartDate")
                        .WithMany()
                        .HasForeignKey("SourceStartDateItemTypeID");

                    b.HasOne("ABS.DBModels.StatisticsCodes", "StatisticsCode")
                        .WithMany()
                        .HasForeignKey("StatisticsCodeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "TargetEndDate")
                        .WithMany()
                        .HasForeignKey("TargetEndDateItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "TargetStartDate")
                        .WithMany()
                        .HasForeignKey("TargetStartDateItemTypeID");
                });

            modelBuilder.Entity("ABS.DBModels.Entities", b =>
                {
                    b.HasOne("ABS.DBModels.Accounts", "Account")
                        .WithMany()
                        .HasForeignKey("AccountID");

                    b.HasOne("ABS.DBModels.Addresses", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID");

                    b.HasOne("ABS.DBModels.ChargeCodes", "ChargeCode")
                        .WithMany()
                        .HasForeignKey("ChargeCodeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "DataSourceID")
                        .WithMany()
                        .HasForeignKey("DataSourceIDItemTypeID");

                    b.HasOne("ABS.DBModels.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("ABS.DBModels.JobCodes", "JobCode")
                        .WithMany()
                        .HasForeignKey("JobCodeID");

                    b.HasOne("ABS.DBModels.PayTypes", "PayType")
                        .WithMany()
                        .HasForeignKey("PayTypeID");
                });

            modelBuilder.Entity("ABS.DBModels.ForecastHistory", b =>
                {
                    b.HasOne("ABS.DBModels.BudgetVersions", "budgetVersionID")
                        .WithMany()
                        .HasForeignKey("BudgetVersionID");

                    b.HasOne("ABS.DBModels.ItemTypes", "DatascenarioTypeId")
                        .WithMany()
                        .HasForeignKey("DatascenarioTypeIdItemTypeID");

                    b.HasOne("ABS.DBModels.IdentityUserProfile", "UserID")
                        .WithMany()
                        .HasForeignKey("UserIDUserProfileID");
                });

            modelBuilder.Entity("ABS.DBModels.ForecastSteps", b =>
                {
                    b.HasOne("ABS.DBModels.ForecastModels", "ForecastModel")
                        .WithMany()
                        .HasForeignKey("ForecastModelID");

                    b.HasOne("ABS.DBModels.ItemTypes", "ForecastStepType")
                        .WithMany()
                        .HasForeignKey("ForecastStepTypeItemTypeID");

                    b.HasOne("ABS.DBModels.BudgetVersions", "SourceBudgetVersion")
                        .WithMany()
                        .HasForeignKey("SourceBudgetVersionBudgetVersionID");

                    b.HasOne("ABS.DBModels.Departments", "SourceDepartment")
                        .WithMany()
                        .HasForeignKey("SourceDepartmentDepartmentID");

                    b.HasOne("ABS.DBModels.Entities", "SourceEntity")
                        .WithMany()
                        .HasForeignKey("SourceEntityEntityID");

                    b.HasOne("ABS.DBModels.ItemTypes", "SourceScenarioType")
                        .WithMany()
                        .HasForeignKey("SourceScenarioTypeItemTypeID");

                    b.HasOne("ABS.DBModels.StatisticsCodes", "SourceStatisticCode")
                        .WithMany()
                        .HasForeignKey("SourceStatisticCodeStatisticsCodeID");

                    b.HasOne("ABS.DBModels.BudgetVersions", "TargetBudgetVersion")
                        .WithMany()
                        .HasForeignKey("TargetBudgetVersionBudgetVersionID");

                    b.HasOne("ABS.DBModels.Departments", "TargetDepartment")
                        .WithMany()
                        .HasForeignKey("TargetDepartmentDepartmentID");

                    b.HasOne("ABS.DBModels.Entities", "TargetEntity")
                        .WithMany()
                        .HasForeignKey("TargetEntityEntityID");

                    b.HasOne("ABS.DBModels.ItemTypes", "TargetScenarioType")
                        .WithMany()
                        .HasForeignKey("TargetScenarioTypeItemTypeID");

                    b.HasOne("ABS.DBModels.StatisticsCodes", "TargetStatisticCode")
                        .WithMany()
                        .HasForeignKey("TargetStatisticCodeStatisticsCodeID");
                });

            modelBuilder.Entity("ABS.DBModels.FullTimeEquivalent", b =>
                {
                    b.HasOne("ABS.DBModels.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("ABS.DBModels.Entities", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityID");

                    b.HasOne("ABS.DBModels.JobCodes", "JobCode")
                        .WithMany()
                        .HasForeignKey("JobCodeID");

                    b.HasOne("ABS.DBModels.TimePeriods", "TimePeriod")
                        .WithMany()
                        .HasForeignKey("TimePeriodID");
                });

            modelBuilder.Entity("ABS.DBModels.GLAccounts", b =>
                {
                    b.HasOne("ABS.DBModels.ItemTypes", "DataSourcceID")
                        .WithMany()
                        .HasForeignKey("DataSourcceIDItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "GLAccountType")
                        .WithMany()
                        .HasForeignKey("GLAccountTypeItemTypeID");
                });

            modelBuilder.Entity("ABS.DBModels.GLAccountsInflation", b =>
                {
                    b.HasOne("ABS.DBModels.BudgetVersions", "BudgetVersion")
                        .WithMany()
                        .HasForeignKey("BudgetVersionID");

                    b.HasOne("ABS.DBModels.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("ABS.DBModels.ItemTypes", "EndMonth")
                        .WithMany()
                        .HasForeignKey("EndMonthItemTypeID");

                    b.HasOne("ABS.DBModels.Entities", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityID");

                    b.HasOne("ABS.DBModels.GLAccounts", "GLAccount")
                        .WithMany()
                        .HasForeignKey("GLAccountID");

                    b.HasOne("ABS.DBModels.ItemTypes", "StartMonth")
                        .WithMany()
                        .HasForeignKey("StartMonthItemTypeID");

                    b.HasOne("ABS.DBModels.TimePeriods", "TimePeriodID")
                        .WithMany()
                        .HasForeignKey("TimePeriodID1");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleDataDepartments", b =>
                {
                    b.HasOne("ABS.DBModels.IdentityAppRoles", "AppRoleID")
                        .WithMany()
                        .HasForeignKey("AppRoleIDIdentityAppRoleID");

                    b.HasOne("ABS.DBModels.Departments", "DepartmentID")
                        .WithMany()
                        .HasForeignKey("DepartmentID1");

                    b.HasOne("ABS.DBModels.IdentityUserProfile", "UserID")
                        .WithMany()
                        .HasForeignKey("UserIDUserProfileID");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleDataEntities", b =>
                {
                    b.HasOne("ABS.DBModels.IdentityAppRoles", "AppRoleID")
                        .WithMany()
                        .HasForeignKey("AppRoleIDIdentityAppRoleID");

                    b.HasOne("ABS.DBModels.Entities", "EntityID")
                        .WithMany()
                        .HasForeignKey("EntityID1");

                    b.HasOne("ABS.DBModels.IdentityUserProfile", "UserID")
                        .WithMany()
                        .HasForeignKey("UserIDUserProfileID");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleDataGLAccounts", b =>
                {
                    b.HasOne("ABS.DBModels.IdentityAppRoles", "AppRoleID")
                        .WithMany()
                        .HasForeignKey("AppRoleIDIdentityAppRoleID");

                    b.HasOne("ABS.DBModels.GLAccounts", "GLAccountsID")
                        .WithMany()
                        .HasForeignKey("GLAccountsIDGLAccountID");

                    b.HasOne("ABS.DBModels.IdentityUserProfile", "UserID")
                        .WithMany()
                        .HasForeignKey("UserIDUserProfileID");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleDataJobCodes", b =>
                {
                    b.HasOne("ABS.DBModels.IdentityAppRoles", "AppRoleID")
                        .WithMany()
                        .HasForeignKey("AppRoleIDIdentityAppRoleID");

                    b.HasOne("ABS.DBModels.JobCodes", "JobCodesID")
                        .WithMany()
                        .HasForeignKey("JobCodesIDJobCodeID");

                    b.HasOne("ABS.DBModels.IdentityUserProfile", "UserID")
                        .WithMany()
                        .HasForeignKey("UserIDUserProfileID");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleDataPayTypes", b =>
                {
                    b.HasOne("ABS.DBModels.IdentityAppRoles", "AppRoleID")
                        .WithMany()
                        .HasForeignKey("AppRoleIDIdentityAppRoleID");

                    b.HasOne("ABS.DBModels.PayTypes", "PayTypesID")
                        .WithMany()
                        .HasForeignKey("PayTypesIDPayTypeID");

                    b.HasOne("ABS.DBModels.IdentityUserProfile", "UserID")
                        .WithMany()
                        .HasForeignKey("UserIDUserProfileID");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleDataStatistics", b =>
                {
                    b.HasOne("ABS.DBModels.IdentityAppRoles", "AppRoleID")
                        .WithMany()
                        .HasForeignKey("AppRoleIDIdentityAppRoleID");

                    b.HasOne("ABS.DBModels.StatisticsCodes", "StatsCodeID")
                        .WithMany()
                        .HasForeignKey("StatsCodeIDStatisticsCodeID");

                    b.HasOne("ABS.DBModels.IdentityUserProfile", "UserID")
                        .WithMany()
                        .HasForeignKey("UserIDUserProfileID");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleGroup", b =>
                {
                    b.HasOne("ABS.DBModels.IdentityAppRoles", "AppRoleID")
                        .WithMany()
                        .HasForeignKey("AppRoleIDIdentityAppRoleID");

                    b.HasOne("ABS.DBModels.IdentityGroups", "GroupsID")
                        .WithMany()
                        .HasForeignKey("GroupsIDIdentityGroupID");

                    b.HasOne("ABS.DBModels.IdentityUserProfile", "UserID")
                        .WithMany()
                        .HasForeignKey("UserIDUserProfileID");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleScreenOperations", b =>
                {
                    b.HasOne("ABS.DBModels.IdentityAppRoles", "AppRoleID")
                        .WithMany()
                        .HasForeignKey("AppRoleIDIdentityAppRoleID");

                    b.HasOne("ABS.DBModels.IdentityScreenOperations", "ScreenOperationID")
                        .WithMany()
                        .HasForeignKey("ScreenOperationIDIdentityScreenOperationID");

                    b.HasOne("ABS.DBModels.IdentityUserProfile", "UserID")
                        .WithMany()
                        .HasForeignKey("UserIDUserProfileID");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleScreens", b =>
                {
                    b.HasOne("ABS.DBModels.IdentityAppRoles", "AppRoleID")
                        .WithMany()
                        .HasForeignKey("AppRoleIDIdentityAppRoleID");

                    b.HasOne("ABS.DBModels.IdentityScreens", "ScreenID")
                        .WithMany()
                        .HasForeignKey("ScreenIDIdentityScreenID");

                    b.HasOne("ABS.DBModels.IdentityUserProfile", "UserID")
                        .WithMany()
                        .HasForeignKey("UserIDUserProfileID");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityAppRoleUsers", b =>
                {
                    b.HasOne("ABS.DBModels.IdentityAppRoles", "AppRoleID")
                        .WithMany()
                        .HasForeignKey("AppRoleIDIdentityAppRoleID");

                    b.HasOne("ABS.DBModels.IdentityUserProfile", "UserID")
                        .WithMany()
                        .HasForeignKey("UserIDUserProfileID");
                });

            modelBuilder.Entity("ABS.DBModels.IdentityScreenOperations", b =>
                {
                    b.HasOne("ABS.DBModels.IdentityOperations", "IdentityOperation")
                        .WithMany()
                        .HasForeignKey("IdentityOperationID");

                    b.HasOne("ABS.DBModels.IdentityScreens", "IdentityScreens")
                        .WithMany()
                        .HasForeignKey("IdentityScreensIdentityScreenID");
                });

            modelBuilder.Entity("ABS.DBModels.JobCodes", b =>
                {
                    b.HasOne("ABS.DBModels.JobCodes", "JobCodeMaster")
                        .WithMany()
                        .HasForeignKey("JobCodeMasterJobCodeID");
                });

            modelBuilder.Entity("ABS.DBModels.Notification", b =>
                {
                    b.HasOne("ABS.DBModels.IdentityUserProfile", "IdentityUserProfile_Recipient_FK")
                        .WithMany()
                        .HasForeignKey("IdentityUserProfile_Recipient_FKUserProfileID");

                    b.HasOne("ABS.DBModels.IdentityUserProfile", "IdentityUserProfile_SEntBy_FK")
                        .WithMany()
                        .HasForeignKey("IdentityUserProfile_SEntBy_FKUserProfileID");

                    b.HasOne("ABS.DBModels.ItemTypes", "NotificationItemTypeIDs_FK")
                        .WithMany()
                        .HasForeignKey("NotificationItemTypeIDs_FKItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "Statuses_FK")
                        .WithMany()
                        .HasForeignKey("Statuses_FKItemTypeID");
                });

            modelBuilder.Entity("ABS.DBModels.PayTypeDistribution", b =>
                {
                    b.HasOne("ABS.DBModels.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("ABS.DBModels.Entities", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityID");

                    b.HasOne("ABS.DBModels.JobCodes", "JobCode")
                        .WithMany()
                        .HasForeignKey("JobCodeID");

                    b.HasOne("ABS.DBModels.PayTypes", "PayType")
                        .WithMany()
                        .HasForeignKey("PayTypeID");
                });

            modelBuilder.Entity("ABS.DBModels.PayTypes", b =>
                {
                    b.HasOne("ABS.DBModels.PayTypes", "PayTypeMaster")
                        .WithMany()
                        .HasForeignKey("PayTypeMasterPayTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "PayTypeType")
                        .WithMany()
                        .HasForeignKey("PayTypeTypeItemTypeID");
                });

            modelBuilder.Entity("ABS.DBModels.Relationships", b =>
                {
                    b.HasOne("ABS.DBModels.ItemTypes", "ModelType")
                        .WithMany()
                        .HasForeignKey("ModelTypeItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "RelationshipType")
                        .WithMany()
                        .HasForeignKey("RelationshipTypeItemTypeID");
                });

            modelBuilder.Entity("ABS.DBModels.ReportingDimensions", b =>
                {
                    b.HasOne("ABS.DBModels.ItemTypes", "ReportStatus")
                        .WithMany()
                        .HasForeignKey("ReportStatusItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "ScenarioType")
                        .WithMany()
                        .HasForeignKey("ScenarioTypeItemTypeID");
                });

            modelBuilder.Entity("ABS.DBModels.StaffingData", b =>
                {
                    b.HasOne("ABS.DBModels.DataScenario", "DataScenarioID1")
                        .WithMany()
                        .HasForeignKey("DataScenarioID1DataScenarioID");

                    b.HasOne("ABS.DBModels.ItemTypes", "DataScenarioTypeID")
                        .WithMany()
                        .HasForeignKey("DataScenarioTypeIDItemTypeID");

                    b.HasOne("ABS.DBModels.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("ABS.DBModels.Entities", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityID");

                    b.HasOne("ABS.DBModels.ItemTypes", "FiscalMonth")
                        .WithMany()
                        .HasForeignKey("FiscalMonthItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "FiscalYear")
                        .WithMany()
                        .HasForeignKey("FiscalYearItemTypeID");

                    b.HasOne("ABS.DBModels.JobCodes", "JobCode")
                        .WithMany()
                        .HasForeignKey("JobCodeID");

                    b.HasOne("ABS.DBModels.PayTypes", "PayType")
                        .WithMany()
                        .HasForeignKey("PayTypeID");

                    b.HasOne("ABS.DBModels.TimePeriods", "StaffingTimePeriod")
                        .WithMany()
                        .HasForeignKey("StaffingTimePeriodTimePeriodID");
                });

            modelBuilder.Entity("ABS.DBModels.StaffingGLMappings", b =>
                {
                    b.HasOne("ABS.DBModels.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("ABS.DBModels.Entities", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityID");

                    b.HasOne("ABS.DBModels.GLAccounts", "GLAccount")
                        .WithMany()
                        .HasForeignKey("GLAccountID");

                    b.HasOne("ABS.DBModels.JobCodes", "JobCode")
                        .WithMany()
                        .HasForeignKey("JobCodeID");

                    b.HasOne("ABS.DBModels.PayTypes", "PayType")
                        .WithMany()
                        .HasForeignKey("PayTypeID");
                });

            modelBuilder.Entity("ABS.DBModels.StaffingWageAdjustment", b =>
                {
                    b.HasOne("ABS.DBModels.BudgetVersions", "BudgetVersion")
                        .WithMany()
                        .HasForeignKey("BudgetVersionID");

                    b.HasOne("ABS.DBModels.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("ABS.DBModels.ItemTypes", "EndMonth")
                        .WithMany()
                        .HasForeignKey("EndMonthItemTypeID");

                    b.HasOne("ABS.DBModels.Entities", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityID");

                    b.HasOne("ABS.DBModels.JobCodes", "JobCode")
                        .WithMany()
                        .HasForeignKey("JobCodeID");

                    b.HasOne("ABS.DBModels.PayTypes", "PayType")
                        .WithMany()
                        .HasForeignKey("PayTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "StartMonth")
                        .WithMany()
                        .HasForeignKey("StartMonthItemTypeID");

                    b.HasOne("ABS.DBModels.TimePeriods", "TimePeriodID")
                        .WithMany()
                        .HasForeignKey("TimePeriodID1");
                });

            modelBuilder.Entity("ABS.DBModels.StatisticMappings", b =>
                {
                    b.HasOne("ABS.DBModels.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("ABS.DBModels.Entities", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityID");

                    b.HasOne("ABS.DBModels.StatisticsCodes", "PrimaryStatisticCode")
                        .WithMany()
                        .HasForeignKey("PrimaryStatisticCodeStatisticsCodeID");

                    b.HasOne("ABS.DBModels.StatisticsCodes", "PrimaryStatisticMaster")
                        .WithMany()
                        .HasForeignKey("PrimaryStatisticMasterStatisticsCodeID");

                    b.HasOne("ABS.DBModels.StatisticsCodes", "SecondaryStatisticCode")
                        .WithMany()
                        .HasForeignKey("SecondaryStatisticCodeStatisticsCodeID");

                    b.HasOne("ABS.DBModels.StatisticsCodes", "SecondaryStatisticMaster")
                        .WithMany()
                        .HasForeignKey("SecondaryStatisticMasterStatisticsCodeID");

                    b.HasOne("ABS.DBModels.StatisticsCodes", "TertiaryStatisticCode")
                        .WithMany()
                        .HasForeignKey("TertiaryStatisticCodeStatisticsCodeID");

                    b.HasOne("ABS.DBModels.StatisticsCodes", "TertiaryStatisticMaster")
                        .WithMany()
                        .HasForeignKey("TertiaryStatisticMasterStatisticsCodeID");
                });

            modelBuilder.Entity("ABS.DBModels.StatisticalData", b =>
                {
                    b.HasOne("ABS.DBModels.DataScenario", "DataScenarioDataID")
                        .WithMany()
                        .HasForeignKey("DataScenarioDataIDDataScenarioID");

                    b.HasOne("ABS.DBModels.ItemTypes", "DataScenarioTypeID")
                        .WithMany()
                        .HasForeignKey("DataScenarioTypeIDItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "DataSourcceID")
                        .WithMany()
                        .HasForeignKey("DataSourcceIDItemTypeID");

                    b.HasOne("ABS.DBModels.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("ABS.DBModels.Entities", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityID");

                    b.HasOne("ABS.DBModels.ItemTypes", "FiscalYearID")
                        .WithMany()
                        .HasForeignKey("FiscalYearIDItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "FiscalYearMonthID")
                        .WithMany()
                        .HasForeignKey("FiscalYearMonthIDItemTypeID");

                    b.HasOne("ABS.DBModels.GLAccounts", "GLAccountMasterID")
                        .WithMany()
                        .HasForeignKey("GLAccountMasterIDGLAccountID");

                    b.HasOne("ABS.DBModels.ItemTypes", "GLAccountTypeID")
                        .WithMany()
                        .HasForeignKey("GLAccountTypeIDItemTypeID");

                    b.HasOne("ABS.DBModels.GLAccounts", "GlAccoutnID")
                        .WithMany()
                        .HasForeignKey("GlAccoutnIDGLAccountID");

                    b.HasOne("ABS.DBModels.StatisticsCodes", "StatisticCode")
                        .WithMany()
                        .HasForeignKey("StatisticCodeStatisticsCodeID");

                    b.HasOne("ABS.DBModels.TimePeriods", "StatisticTimePeriod")
                        .WithMany()
                        .HasForeignKey("StatisticTimePeriodTimePeriodID");
                });

            modelBuilder.Entity("ABS.DBModels.StatisticsCodes", b =>
                {
                    b.HasOne("ABS.DBModels.ItemTypes", "DataSourcceID")
                        .WithMany()
                        .HasForeignKey("DataSourcceIDItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "StatisticCodeType")
                        .WithMany()
                        .HasForeignKey("StatisticCodeTypeItemTypeID");
                });

            modelBuilder.Entity("ABS.DBModels.SubAccountsDimensions", b =>
                {
                    b.HasOne("ABS.DBModels.BudgetVersions", "BudgetVersion")
                        .WithMany()
                        .HasForeignKey("BudgetVersionID");

                    b.HasOne("ABS.DBModels.DataScenario", "DataScenarioID")
                        .WithMany()
                        .HasForeignKey("DataScenarioID1");

                    b.HasOne("ABS.DBModels.ItemTypes", "DataScenarioTypeID")
                        .WithMany()
                        .HasForeignKey("DataScenarioTypeIDItemTypeID");

                    b.HasOne("ABS.DBModels.Departments", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID");

                    b.HasOne("ABS.DBModels.Dimensions", "DimensionsRowID")
                        .WithMany()
                        .HasForeignKey("DimensionsRowIDDimensionsID");

                    b.HasOne("ABS.DBModels.Entities", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityID");

                    b.HasOne("ABS.DBModels.GLAccounts", "GLAccounts")
                        .WithMany()
                        .HasForeignKey("GLAccountsGLAccountID");

                    b.HasOne("ABS.DBModels.JobCodes", "JobCode")
                        .WithMany()
                        .HasForeignKey("JobCodeID");

                    b.HasOne("ABS.DBModels.PayTypes", "PayType")
                        .WithMany()
                        .HasForeignKey("PayTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "StaffingDataType")
                        .WithMany()
                        .HasForeignKey("StaffingDataTypeItemTypeID");

                    b.HasOne("ABS.DBModels.StatisticsCodes", "StatisticsCodes")
                        .WithMany()
                        .HasForeignKey("StatisticsCodesStatisticsCodeID");

                    b.HasOne("ABS.DBModels.TimePeriods", "TimePeriodID")
                        .WithMany()
                        .HasForeignKey("TimePeriodID1");
                });

            modelBuilder.Entity("ABS.DBModels.SystemSettings", b =>
                {
                    b.HasOne("ABS.DBModels.ItemTypes", "ItemDataType")
                        .WithMany()
                        .HasForeignKey("ItemDataTypeItemTypeID");
                });

            modelBuilder.Entity("ABS.DBModels.TimePeriods", b =>
                {
                    b.HasOne("ABS.DBModels.ItemTypes", "FiscalEndMonthID")
                        .WithMany()
                        .HasForeignKey("FiscalEndMonthIDItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "FiscalStartMonthID")
                        .WithMany()
                        .HasForeignKey("FiscalStartMonthIDItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "FiscalYearEndID")
                        .WithMany()
                        .HasForeignKey("FiscalYearEndIDItemTypeID");

                    b.HasOne("ABS.DBModels.ItemTypes", "FiscalYearID")
                        .WithMany()
                        .HasForeignKey("FiscalYearIDItemTypeID");
                });
#pragma warning restore 612, 618
        }
    }
}
